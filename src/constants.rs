//! プロジェクト全体の定数定義
//!
//! QuantForgeプロジェクトで使用される共通定数を定義
//! 精度レベルは用途別に階層化されており、適切なレベルを選択して使用してください。

/// 実務精度: 価格計算・金融実務用（0.1% = 1bp×10）
///
/// 金融実務で標準的な精度。機関投資家の取引でも0.1セント単位で十分。
/// この精度は浮動小数点演算で確実に達成可能。
/// 価格計算、バッチ処理、実務アプリケーションで使用。
pub const PRACTICAL_TOLERANCE: f64 = 1e-3;

/// 理論精度: アルゴリズムの精度制約下での検証用
///
/// norm_cdf実装の現在の精度限界（約1e-5レベル）を考慮した精度。
/// 理論的な価格モデルの検証や、数学的性質のテストで使用。
pub const THEORETICAL_TOLERANCE: f64 = 1e-5;

/// 数値精度: 基本的な数値計算の検証用
///
/// 高精度が必要な数学的性質の検証（対称性、単調性など）で使用。
/// 浮動小数点演算の限界内での最高精度レベル。
pub const NUMERICAL_TOLERANCE: f64 = 1e-7;

/// デフォルト精度（実務用途）
///
/// 後方互換性のため、EPSILONは実務精度を指す。
/// 新規コードではPRACTICAL_TOLERANCEの使用を推奨。
pub const EPSILON: f64 = PRACTICAL_TOLERANCE;

/// 数学定数: 1/√(2π)
///
/// 標準正規分布の確率密度関数で使用。
/// 値は高精度計算により導出。
pub const INV_SQRT_2PI: f64 = 0.3989422804014327;

/// グリークス計算用: 年間日数
///
/// Theta計算で1日あたりの時間価値減少を計算する際に使用。
/// 金融実務では365日を標準とする。
pub const DAYS_PER_YEAR: f64 = 365.0;

/// グリークス計算用: ベーシスポイント
///
/// VegaとRhoの計算で1%変化に対する感応度を表現する際に使用。
/// 1% = 100ベーシスポイント
pub const BASIS_POINT_MULTIPLIER: f64 = 100.0;
